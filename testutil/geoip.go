package testutil

import (
	"encoding/base64"

	"github.com/oschwald/geoip2-golang"
)

const (
	// GeoIP2IPv4 contains the only IPv4 in the geoip2 test database
	// Location: Milton, Washington, US
	GeoIP2IPv4 = "216.160.83.56"

	// GeoIP2IPv6 contains the only IPv6 in the geoip2 test database
	// Finland, EU
	GeoIP2IPv6 = "2a02:d200::1"
)

// GeoIP2Reader returns a city database reader with only 1 ipv4 and 1 ipv6
// address
func GeoIP2Reader() (*geoip2.Reader, error) {
	b, err := base64.StdEncoding.DecodeString(encodedGeoip)
	if err != nil {
		return nil, err
	}
	return geoip2.FromBytes(b)
}

// made via https://github.com/maxmind/MaxMind-DB/ using write-test-data.pl
const encodedGeoip = `
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
AYIAAYMAAAGRAAGEAAABkQABhQAAAZEAAYYAAAGRAAGHAAABkQAE6AAAAZEAAZEAAAGJAAGRAAABigAB
kQAAAYsAAZEAAAGMAAGRAAABjQABkQAAAY4AAY8AAAGRAAGRAAABkAABkQAAAZEAAAAAAAAAAAAAAAAA
AAAA50RjaXR54kpnZW9uYW1lX2lkw1iOJEVuYW1lc+JCZW5GTWlsdG9uQnJ1TtCc0LjQu9GM0YLQvtC9
SWNvbnRpbmVudONEY29kZUJOQSAHw19yLSAW6EJkZUtOb3JkYW1lcmlrYUJlbk1Ob3J0aCBBbWVyaWNh
QmVzUkFtw6lyaWNhIGRlbCBOb3J0ZUJmclFBbcOpcmlxdWUgZHUgTm9yZEJqYU/ljJfjgqLjg6Hjg6rj
gqtFcHQtQlJRQW3DqXJpY2EgZG8gTm9ydGVCcnVdAtCh0LXQstC10YDQvdCw0Y8g0JDQvNC10YDQuNC6
0LBFemgtQ05J5YyX576O5rSyR2NvdW50cnnjIAfDX2XhSGlzb19jb2RlQlVTIBboQmRlQ1VTQUJlbk1V
bml0ZWQgU3RhdGVzQmVzTkVzdGFkb3MgVW5pZG9zQmZyS8OJdGF0cy1VbmlzQmphVeOCouODoeODquOC
q+WQiOihhuWbvSCzIThCcnVG0KHQqNCQIO9G576O5Zu9SGxvY2F0aW9u5U9hY2N1cmFjeV9yYWRpdXOh
FkhsYXRpdHVkZWhAR6AqmTC+Dklsb25naXR1ZGVowF6UJ1JUYKpKbWV0cm9fY29kZaIDM0l0aW1lX3pv
bmVTQW1lcmljYS9Mb3NfQW5nZWxlc0Zwb3N0YWzhIERFOTgzNTRScmVnaXN0ZXJlZF9jb3VudHJ55CAH
wyg1n1Rpc19pbl9ldXJvcGVhbl91bmlvbgEHIQ5CR0IgFuhCZGVXVmVyZWluaWd0ZXMgS8O2bmlncmVp
Y2hCZW5OVW5pdGVkIEtpbmdkb21CZXNLUmVpbm8gVW5pZG9CZnJLUm95YXVtZS1VbmlCamFM44Kk44Ku
44Oq44K5ILMibEJydVzQktC10LvQuNC60L7QsdGA0LjRgtCw0L3QuNGPIO9G6Iux5Zu9THN1YmRpdmlz
aW9ucwEE4yAHw1i7XyEOQldBIBbmQmVuSldhc2hpbmd0b25CZXMi5UJmclPDiXRhdCBkZSBXYXNoaW5n
dG9uQmphUuODr+OCt+ODs+ODiOODs+W3nkJydVLQktCw0YjQuNC90LPRgtC+0L0g70zljY7nm5vpob/l
t57kIDnjIERCRVUgB8NfciwgFuhCZGVGRXVyb3BhQmVuRkV1cm9wZUJlcyNcQmZyI2ZCamFP44Oo44O8
44Ot44OD44ORILMjXEJydUzQldCy0YDQvtC/0LAg70bmrKfmtLIg/+QgB8MKEi0iHSIyIQ5CRkkgFuhC
ZGVIRmlubmxhbmRCZW5HRmlubGFuZEJlc0lGaW5sYW5kaWFCZnJIRmlubGFuZGVCamFb44OV44Kj44Oz
44Op44Oz44OJ5YWx5ZKM5Zu9ILNKRmlubMOibmRpYUJydVLQpNC40L3Qu9GP0L3QtNC40Y8g70boiqzl
hbAhhuQhkKFkIaJoQFAAAAAAAAAhtGhAOgAAAAAAACHVT0V1cm9wZS9IZWxzaW5raSIDI6mrze9NYXhN
aW5kLmNvbelbYmluYXJ5X2Zvcm1hdF9tYWpvcl92ZXJzaW9uoQJbYmluYXJ5X2Zvcm1hdF9taW5vcl92
ZXJzaW9uoEtidWlsZF9lcG9jaAQCWup7LU1kYXRhYmFzZV90eXBlS0dlb0lQMi1DaXR5S2Rlc2NyaXB0
aW9u4kJlbl0qR2VvSVAyIENpdHkgVGVzdCBEYXRhYmFzZSAoZmFrZSBHZW9JUDIgZGF0YSwgZm9yIGV4
YW1wbGUgcHVycG9zZXMgb25seSlCemhP5bCP5Z6L5pWw5o2u5bqTSmlwX3ZlcnNpb26hBklsYW5ndWFn
ZXMCBEJlbkJ6aEpub2RlX2NvdW50wgGRS3JlY29yZF9zaXploRw=
`
